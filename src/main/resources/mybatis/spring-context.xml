<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<description>Spring Configuration</description>

	<!-- 加载配置属性文件 -->
	<context:property-placeholder
		ignore-unresolvable="true"
		location="classpath:mybatis/mybatis_config.properties" />

	<!-- 使用Annotation自动注册Bean，解决事物失效问题：在主容器中不扫描@Controller注解，在SpringMvc中只扫描@Controller注解。 -->
	<context:component-scan
		base-package="com.ozz.mybatis.component"></context:component-scan>

	<!--开启mapper包扫描 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ozz.mybatis.mapper.routing" />
	</bean>

	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="routingDataSource" />
		<property name="typeAliasesPackage"
			value="com.ozz.mybatis.model" />
		<property name="typeAliasesSuperType"
			value="com.ozz.mybatis.model.BaseObject" />
		<property name="mapperLocations"
			value="classpath:/mapper/**/*.xml" />
		<property name="configLocation"
			value="classpath:/mybatis/mybatis-config.xml" />
	</bean>

	<bean id="routingDataSource"
		class="com.ozz.mybatis.config.db.routing.RoutingDataSource">
		<property name="defaultTargetDataSource" ref="dataSource1" />
		<property name="targetDataSources">
			<map>
				<entry key="dataSource1" value-ref="dataSource1" />
				<entry key="dataSource2" value-ref="dataSource2" />
			</map>
		</property>
	</bean>

	<!-- 数据源配置 -->
	<bean id="dataSource1" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<property name="driverClassName"
			value="${datasource.driverClassName}" />
		<property name="jdbcUrl" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="maximumPoolSize" value="${datasource.maximumPoolSize}" />
		<property name="maxLifetime" value="${datasource.maxLifetime}" />
	</bean>
	<bean id="dataSource2" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<property name="driverClassName"
			value="${datasource2.driverClassName}" />
		<property name="jdbcUrl" value="${datasource2.url}" />
		<property name="username" value="${datasource2.username}" />
		<property name="password" value="${datasource2.password}" />
		<property name="maximumPoolSize" value="${datasource2.maximumPoolSize}" />
		<property name="maxLifetime" value="${datasource2.maxLifetime}" />
	</bean>

	<!-- 定义事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="routingDataSource" />
	</bean>

	<!--1.配置Spring框架自身提供的切面类 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED"
				read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED"
				read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED"
				read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="select*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<!-- 2.配置自己定义的切面类 -->
	<bean id="dataSourceAdvice"
		class="com.ozz.mybatis.config.db.routing_xml.DataSourceAdvice" />
	<!-- 3.根据切面动态切换数据源 -->
	<aop:config>
		<aop:pointcut id="servicePointcut"
			expression="execution(* com.ozz.mybatis.service.*.*(..))" />
		<aop:advisor pointcut-ref="servicePointcut"
			advice-ref="dataSourceAdvice" order="1" />
		<aop:advisor pointcut-ref="servicePointcut"
			advice-ref="txAdvice" order="2" />
	</aop:config>

</beans>